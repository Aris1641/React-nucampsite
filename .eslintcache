[{"/home/user/Desktop/NucampFolder/3-React/nucampsite/src/index.js":"1","/home/user/Desktop/NucampFolder/3-React/nucampsite/src/App.js":"2","/home/user/Desktop/NucampFolder/3-React/nucampsite/src/reportWebVitals.js":"3","/home/user/Desktop/NucampFolder/3-React/nucampsite/src/components/MainComponent.js":"4","/home/user/Desktop/NucampFolder/3-React/nucampsite/src/components/DirectoryComponent.js":"5","/home/user/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js":"6","/home/user/Desktop/NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js":"7","/home/user/Desktop/NucampFolder/3-React/nucampsite/src/components/FooterComponent.js":"8","/home/user/Desktop/NucampFolder/3-React/nucampsite/src/components/HomeComponent.js":"9","/home/user/Desktop/NucampFolder/3-React/nucampsite/src/components/ContactComponent.js":"10","/home/user/Desktop/NucampFolder/3-React/nucampsite/src/shared/comments.js":"11","/home/user/Desktop/NucampFolder/3-React/nucampsite/src/shared/campsites.js":"12","/home/user/Desktop/NucampFolder/3-React/nucampsite/src/shared/partners.js":"13","/home/user/Desktop/NucampFolder/3-React/nucampsite/src/shared/promotions.js":"14","/home/user/Desktop/NucampFolder/3-React/nucampsite/src/components/AboutComponent.js":"15","/home/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/configureStore.js":"16","/home/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/comments.js":"17","/home/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/campsites.js":"18","/home/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/partners.js":"19","/home/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/promotions.js":"20","/home/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionCreators.js":"21","/home/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionTypes.js":"22","/home/user/Desktop/NucampFolder/3-React/nucampsite/src/components/LoadingComponent.js":"23","/home/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/forms.js":"24","/home/user/Desktop/NucampFolder/3-React/nucampsite/src/shared/baseUrl.js":"25"},{"size":717,"mtime":1650127283616,"results":"26","hashOfConfig":"27"},{"size":646,"mtime":1650727456776,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1649101838514,"results":"29","hashOfConfig":"27"},{"size":3478,"mtime":1651366222067,"results":"30","hashOfConfig":"27"},{"size":2109,"mtime":1651353311554,"results":"31","hashOfConfig":"27"},{"size":7083,"mtime":1651366868075,"results":"32","hashOfConfig":"27"},{"size":5229,"mtime":1650732646797,"results":"33","hashOfConfig":"27"},{"size":1936,"mtime":1650732641285,"results":"34","hashOfConfig":"27"},{"size":1391,"mtime":1651353473281,"results":"35","hashOfConfig":"27"},{"size":11224,"mtime":1651196628325,"results":"36","hashOfConfig":"27"},{"size":4870,"mtime":1650128739170,"results":"37","hashOfConfig":"27"},{"size":1242,"mtime":1650128734210,"results":"38","hashOfConfig":"27"},{"size":1054,"mtime":1650113154000,"results":"39","hashOfConfig":"27"},{"size":303,"mtime":1650113154000,"results":"40","hashOfConfig":"27"},{"size":4127,"mtime":1650732616757,"results":"41","hashOfConfig":"27"},{"size":791,"mtime":1651196191784,"results":"42","hashOfConfig":"27"},{"size":544,"mtime":1651355497720,"results":"43","hashOfConfig":"27"},{"size":611,"mtime":1651025595978,"results":"44","hashOfConfig":"27"},{"size":182,"mtime":1650939603336,"results":"45","hashOfConfig":"27"},{"size":620,"mtime":1651352910584,"results":"46","hashOfConfig":"27"},{"size":4289,"mtime":1651355461056,"results":"47","hashOfConfig":"27"},{"size":445,"mtime":1651349388539,"results":"48","hashOfConfig":"27"},{"size":235,"mtime":1651117211404,"results":"49","hashOfConfig":"27"},{"size":168,"mtime":1651196101590,"results":"50","hashOfConfig":"27"},{"size":48,"mtime":1651349195776,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"13k0w5d",{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/home/user/Desktop/NucampFolder/3-React/nucampsite/src/index.js",[],["106","107"],"/home/user/Desktop/NucampFolder/3-React/nucampsite/src/App.js",[],"/home/user/Desktop/NucampFolder/3-React/nucampsite/src/reportWebVitals.js",[],"/home/user/Desktop/NucampFolder/3-React/nucampsite/src/components/MainComponent.js",[],"/home/user/Desktop/NucampFolder/3-React/nucampsite/src/components/DirectoryComponent.js",[],"/home/user/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js",["108","109","110"],"import React, { Component } from 'react';\r\nimport { Card, CardImg, CardText, CardBody, Breadcrumb, BreadcrumbItem, Button, Label, Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { postComment } from '../redux/ActionCreators';\r\n\r\n\r\n\r\nconst maxLength = len => val => !val || (val.length <= len);\r\nconst minLength = len => val => val && (val.length >= len);\r\n\r\n\r\nclass CommentForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false,\r\n            inputValue: { rating: '', author: '', text: '' },\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            inputValue: { [event.target.name]: event.target.value }\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.campsiteId, values.rating, values.author, values.text);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <i className=\"fa fa-pencil fa-lg\" /> Submit Comment\r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={values => this.handleSubmit(values)}>\r\n                            <div className=\"form-group\">\r\n                                <Label htmlFor=\"rating\">Rating</Label>\r\n                                <Control.select model=\".rating\" id=\"rating\" name=\"rating\"\r\n                                    className=\"form-control\"\r\n                                    value={this.state.inputValue.rating}\r\n                                    onChange={this.handleChange}>\r\n                                    <option>1</option>\r\n                                    <option>2</option>\r\n                                    <option>3</option>\r\n                                    <option>4</option>\r\n                                    <option>5</option>\r\n                                </Control.select>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <Label htmlFor=\"author\">Your Name</Label>\r\n                                <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                    placeholder=\"Your Name\"\r\n                                    className=\"form-control\"\r\n                                    validators={{ minLength: minLength(2), maxLength: maxLength(15) }}\r\n                                    value={this.state.inputValue.author}\r\n                                    onChange={this.handleChange} />\r\n                                <Errors className=\"text-danger\"\r\n                                    model=\".author\"\r\n                                    show=\"touched\"\r\n                                    component=\"div\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be at least 2 characters',\r\n                                        maxLength: 'Must be 15 characters or less'\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <Label htmlFor=\"text\">Comment</Label>\r\n                                <Control.textarea model=\".text\" id=\"text\" name=\"text\"\r\n                                    rows=\"6\"\r\n                                    className=\"form-control\"\r\n                                    value={this.state.inputValue.text}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </div>\r\n                            <Button onClick={this.handleSubmit} type=\"submit\" color=\"primary\">\r\n                                Submit\r\n                            </Button>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction RenderCampsite({ campsite }) {\r\n\r\n    return (\r\n        <div className=\"col-md-5 m-1\">\r\n            <Card>\r\n                <CardImg top src={baseUrl + campsite.image} alt={campsite.name} />\r\n                <CardBody>\r\n                    <CardText>{campsite.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction RenderComments({ comments, postComment, campsiteId }) {\r\n    if (comments) {\r\n        return (\r\n            <div className=\"col-md-5 m-1\">\r\n                <h4>Comments</h4>\r\n                {\r\n                    comments.map(comment => {\r\n                        return (\r\n                            <div key={comment.id}>\r\n                                <p>\r\n                                    {comment.text}<br />\r\n                                    -- {comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date)))}\r\n                                </p>\r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n                <CommentForm campsiteId={campsiteId} postComment={postComment} />\r\n            </div>\r\n        );\r\n    }\r\n    return <div />;\r\n}\r\n\r\nfunction CampsiteInfo(props) {\r\n    if (props.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/directory\">Directory</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.campsite.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <Loading />\r\n                    <RenderCampsite campsite={props.campsite} />\r\n                    <RenderComments comments={props.comments} postComment={postComment} campsiteId={props.campsiteId} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    if (props.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    if (props.campsites) {\r\n\r\n    }\r\n}\r\n\r\nexport default CampsiteInfo;","/home/user/Desktop/NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js",[],"/home/user/Desktop/NucampFolder/3-React/nucampsite/src/components/FooterComponent.js",[],"/home/user/Desktop/NucampFolder/3-React/nucampsite/src/components/HomeComponent.js",[],"/home/user/Desktop/NucampFolder/3-React/nucampsite/src/components/ContactComponent.js",["111","112","113","114","115","116","117"],"import React, { Component } from 'react';\r\nimport {\r\n    Breadcrumb, BreadcrumbItem,\r\n    Button, Label, Col, Row\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n\r\n\r\nconst required = val => val && val.length;\r\nconst maxLength = len => val => !val || (val.length <= len);\r\nconst minLength = len => val => val && (val.length >= len);\r\nconst isNumber = val => !isNaN(+val);\r\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            phoneNum: '',\r\n            email: '',\r\n            agree: false,\r\n            contactType: 'By Phone',\r\n            feedback: '',\r\n            touched: {\r\n                firstName: false,\r\n                lastName: false,\r\n                phoneNum: false,\r\n                email: false\r\n            }\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log(\"Current state is: \" + JSON.stringify(values));\r\n        alert(\"Current state is: \" + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <h2>Contact Us</h2>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row row-content align-items-center\">\r\n                    <div className=\"col-sm-4\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            1 Nucamp Way<br />\r\n                            Seattle, WA 98001<br />\r\n                            U.S.A.\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-206-555-1234</a><br />\r\n                        <a role=\"button\" className=\"btn btn-link\" href=\"mailto:fakeemail@fakeemail.co\"><i className=\"fa fa-envelope-o\" /> campsites@nucamp.co</a>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h2>Send us your Feedback</h2>\r\n                        <hr />\r\n                    </div>\r\n                    <div className=\"col-md-10\">\r\n                        <Form model=\"feedbackForm\" onSubmit={values => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstName\" id=\"firstName\" name=\"firstName\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(2),\r\n                                            maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstName\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be at least 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastName\" id=\"lastName\" name=\"lastName\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(2),\r\n                                            maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastName\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be at least 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".phoneNum\" id=\"phoneNum\" name=\"phoneNum\"\r\n                                        placeholder=\"Phone number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(10),\r\n                                            maxLength: maxLength(15),\r\n                                            isNumber\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".phoneNum\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be at least 10 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            validEmail\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid email address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 4, offset: 2 }}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox\r\n                                                model=\".agree\"\r\n                                                name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                            /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={4}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>By Phone</option>\r\n                                        <option>By Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".feedback\" id=\"feedback\" name=\"feedback\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 10, offset: 2 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","/home/user/Desktop/NucampFolder/3-React/nucampsite/src/shared/comments.js",[],["118","119"],"/home/user/Desktop/NucampFolder/3-React/nucampsite/src/shared/campsites.js",[],"/home/user/Desktop/NucampFolder/3-React/nucampsite/src/shared/partners.js",[],"/home/user/Desktop/NucampFolder/3-React/nucampsite/src/shared/promotions.js",[],"/home/user/Desktop/NucampFolder/3-React/nucampsite/src/components/AboutComponent.js",[],"/home/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/configureStore.js",[],"/home/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/comments.js",[],"/home/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/campsites.js",[],"/home/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/partners.js",[],"/home/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/promotions.js",[],"/home/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionCreators.js",[],"/home/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionTypes.js",[],"/home/user/Desktop/NucampFolder/3-React/nucampsite/src/components/LoadingComponent.js",[],"/home/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/forms.js",[],"/home/user/Desktop/NucampFolder/3-React/nucampsite/src/shared/baseUrl.js",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":58,"column":33,"nodeType":"126","messageId":"127","endLine":61,"endColumn":66},{"ruleId":"124","severity":1,"message":"128","line":71,"column":33,"nodeType":"126","messageId":"127","endLine":76,"endColumn":68},{"ruleId":"124","severity":1,"message":"129","line":89,"column":33,"nodeType":"126","messageId":"127","endLine":94,"endColumn":35},{"ruleId":"124","severity":1,"message":"128","line":86,"column":37,"nodeType":"126","messageId":"127","endLine":94,"endColumn":39},{"ruleId":"124","severity":1,"message":"128","line":111,"column":37,"nodeType":"126","messageId":"127","endLine":119,"endColumn":39},{"ruleId":"124","severity":1,"message":"128","line":136,"column":37,"nodeType":"126","messageId":"127","endLine":145,"endColumn":39},{"ruleId":"124","severity":1,"message":"128","line":163,"column":37,"nodeType":"126","messageId":"127","endLine":170,"endColumn":39},{"ruleId":"124","severity":1,"message":"130","line":187,"column":45,"nodeType":"126","messageId":"127","endLine":191,"endColumn":47},{"ruleId":"124","severity":1,"message":"125","line":197,"column":37,"nodeType":"126","messageId":"127","endLine":198,"endColumn":66},{"ruleId":"124","severity":1,"message":"129","line":207,"column":37,"nodeType":"126","messageId":"127","endLine":210,"endColumn":39},{"ruleId":"120","replacedBy":"131"},{"ruleId":"122","replacedBy":"132"},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["133"],["134"],"no-global-assign","no-unsafe-negation"]